---
# tasks file for iteasy.ansible.roles.account_manager
# - name: Check if action is defined and valid
#   fail:
#     msg: "Invalid or missing 'action' variable. It must be 'create', 'update', or 'delete'."
#   when: action not in ['create', 'update', 'delete']

# - name: Include OS-specific variables.
#   ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

# - name: Include OS-specific create tasks
#   ansible.builtin.include_tasks: "create-{{ ansible_os_family }}.yml"
#   when: action == 'create'

# - name: Include OS-specific update tasks
#   ansible.builtin.include_tasks: "update-{{ ansible_os_family }}.yml"
#   when: action == 'update'

# - name: Include OS-specific delete tasks
#   ansible.builtin.include_tasks: "delete-{{ ansible_os_family }}.yml"
#   when: action == 'delete'

- name: Check if action is defined and valid
  fail:
    msg: "Invalid or missing 'action' variable. It must be 'create', 'update', or 'delete'."
  when: action not in ['create', 'update', 'delete']

# 파이썬 3 이상만을 고려
- name: Check if Python is installed
  raw: "python3 --version || python --version"
  register: python_check
  changed_when: false
  failed_when: false

# - name: Extract Python version (if Python is installed)
#   set_fact:
#     python_version: "{{ python_check.stdout | regex_search('Python (\\d+)\\.(\\d+)\\.(\\d+)') }}"
#   when: python_check.rc == 0

# - name: Ensure Python version is 3 or higher
#   fail:
#     msg: "Python version 3.x is required."
#   when: python_version is not defined or python_version is version('3.0.0', '<')
- name: Extract Python version (if Python is installed)
  set_fact:
    # python_version: "{{ python_check.stdout | regex_search('Python (\\d+\\.\\d+\\.\\d+)') }}"
    python_version: "{{ python_check.stdout | regex_search('(?:Python )?(\\d+\\.\\d+\\.\\d+)') }}"
  when: python_check.rc == 0

- name: Convert Python version to a list of integers
  set_fact:
    python_version_list: "{{ python_version.split('.') | map('int') | list }}"
  when: python_version is defined

- name: Debug Python version
  debug:
    msg: 
      - "Raw Python version output: {{ python_check.stdout }}"
      - "Extracted Python version: {{ python_version }}"
      - "Python version as list: {{ python_version_list }}"

- name: Ensure Python version is 3 or higher
  fail:
    msg: "Python version 3.x is required."
  when: python_version_list[0] < 3 # 파이썬 버전 맨 앞만.


# # 파이썬 버전이 3 이상일 때 현재의 태스크들을 진행
# - name: Include OS-specific variables if Python 3.x
#   ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
#   when: python_version is defined and python_version is version('3.0.0', '>=')

# - name: Include OS-specific create tasks if Python 3.x
#   ansible.builtin.include_tasks: "create-{{ ansible_os_family }}.yml"
#   when:
#     - action == 'create'
#     - python_version is defined and python_version is version('3.0.0', '>=')

# - name: Include OS-specific update tasks if Python 3.x
#   ansible.builtin.include_tasks: "update-{{ ansible_os_family }}.yml"
#   when:
#     - action == 'update'
#     - python_version is defined and python_version is version('3.0.0', '>=')

# - name: Include OS-specific delete tasks if Python 3.x
#   ansible.builtin.include_tasks: "delete-{{ ansible_os_family }}.yml"
#   when:
#     - action == 'delete'
#     - python_version is defined and python_version is version('3.0.0', '>=')

# # 파이썬 버전이 3 미만일 때 raw 모듈을 사용하는 플레이북을 include
# - name: Include raw-based tasks if Python is less than 3
#   ansible.builtin.include_tasks: "{{ action }}-raw_tasks.yml"
#   when: python_version is defined and python_version is version('3.0.0', '<')
